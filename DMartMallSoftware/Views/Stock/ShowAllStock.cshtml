@model IEnumerable<DMartMallSoftware.Models.StockModel>

@{
    ViewData["Title"] = "ShowAllStock";
    var item1 = Model.ToList();
}

<h1>Show All Stock</h1>
<hr />

@if (TempData["EditStock"] != null)
{
    <div class="alert alert-success">
        <strong>Success !</strong> @TempData["EditStock"]
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert">
        </button>
    </div>
}
@if (TempData["EditStockFail"] != null)
{
    <div class="alert alert-danger">
        <strong>Unsuccess !</strong> @TempData["EditStockFail"]
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert">
        </button>
    </div>
}
@if (TempData["DeleteStock"] != null)
{
    <div class="alert alert-success">
        <strong>Success !</strong> @TempData["DeleteStock"]
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert">
        </button>
    </div>
}
@if (TempData["DeleteStockFail"] != null)
{
    <div class="alert alert-danger">
        <strong>Unsuccess !</strong> @TempData["DeleteStockFail"]
        <button type="button" class="btn-close float-end" data-bs-dismiss="alert">
        </button>
    </div>
}
<div class="row">
    <div class="col-md-12">
        <form method="get" action="ShowAllStock">
            <table class="table text-center">
                <tr>
                    <td class=""><input type="text" id="Name" name="Name" class="form-control" placeholder="Enter Name..." /></td>

                    <td class=""><input type="submit" class="btn btn-primary ms-5" name="Search" value="Search" /></td>
                </tr>
            </table>
        </form>
    </div>
</div>
<br />
@if (item1.Count == 0)
{
    <table class="table table-bordered table-striped text-center alert-danger ">
        <thead>
            <tr>
                <th>
                    <h3 class="text-danger">Record Not Found !</h3>
                </th>
            </tr>
        </thead>
    </table>
}
else
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.SrNo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Unit)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DiscountPerc) <span>(in %)</span>
                </th>
                @if (int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserTypeId")) == 1 ||
               int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserTypeId")) == 2 ||
               int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserTypeId")) == 5)
                {
                    <th>Action</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.SrNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Unit)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DiscountPerc)
                    </td>
                    @if (int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserTypeId")) == 1 ||
                   int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserTypeId")) == 2 ||
                   int.Parse(HttpContextAccessor.HttpContext.Session.GetString("UserTypeId")) == 5)
                    {
                        <td>
                            @Html.ActionLink("Edit", "EditStock", new { Id=item.Id  }, new{ @class="btn btn-primary"})

                            @*@{
                var x = ("abcde" + item.Id).ToString();
                <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#@x">Delete</button>
                <div class="modal" id="@x">
                <div class="modal-dialog modal-md modal-dialog-centered modal-dialog-scrollable">
                <div class="modal-content">
                <div class="modal-header ">
                Delete Stock Item?
                <button class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                <h4 class="text-warning ">Are You Sure To Delete Stock Item @Html.DisplayFor(modelItem => item.Name)?</h4>
                </div>
                <div class="modal-footer">
                @Html.ActionLink("Delete", "DeleteStock", new { Id=item.Id }, new{ @class="btn btn-danger" })
                </div>
                </div>

                </div>
                </div>
                }*@
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>

}
